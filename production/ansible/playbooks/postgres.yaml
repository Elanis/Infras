---
- hosts: postgres_cluster
  become: yes

  pre_tasks:
    - name: "Install apt packages to add repository"
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - gnupg

    - name: add postgresql apt-key
      apt_key: 
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present 

    - name: add postgresql apt repository
      apt_repository: 
        repo: 'deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main' 
        state: present 
        filename: postgresql 
        update_cache: yes

    - name: "Install postgres server and administrative tools"
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - postgresql-15
        - python3-psutil
        - python3-psycopg2
        - postgresql-plpython3-15
        - pgbackrest

  tasks:
    - name: (Config) Temporary trust local connections, for ansible
      lineinfile:
        path: /etc/postgresql/15/main/pg_hba.conf
        line: 'local   all             postgres                                trust'
        regexp: '^local   all             postgres                                peer$'
        backrefs: yes

    - name: Ensure service is restarted
      ansible.builtin.service:
        name: postgresql
        state: restarted
        enabled: yes

    - name: Create admin user, set password, grant roles
      community.postgresql.postgresql_user:
        name: "{{ postgres_admin_username }}"
        password: "{{ postgres_admin_password }}"
        role_attr_flags: CREATEDB,SUPERUSER,CREATEROLE

    - name: (Config) Rollback local connections authorization used for ansible
      lineinfile:
        path: /etc/postgresql/15/main/pg_hba.conf
        line: 'local   all             postgres                                peer'
        regexp: '^local   all             postgres                                trust$'
        backrefs: yes

    - name: (Config) Allow connections from 192.168.1.*
      lineinfile:
        path=/etc/postgresql/15/main/pg_hba.conf
        line="host    all             all             192.168.1.0/24          scram-sha-256"
        owner=postgres
        regexp='^host    all             all             192.168.1.0/24          scram-sha-256'
        state=present
        insertafter=EOF
        create=True

    - name: (Config) Allow connections from 10.*.*.*
      lineinfile:
        path=/etc/postgresql/15/main/pg_hba.conf
        line="host    all             all             10.0.0.0/8          scram-sha-256"
        owner=postgres
        regexp='^host    all             all             10.0.0.0/8          scram-sha-256'
        state=present
        insertafter=EOF
        create=True

    - name: (Config) Listen on 192.168.1.*
      lineinfile:
        path=/etc/postgresql/15/main/postgresql.conf
        line="listen_addresses = 'localhost,192.168.1.3'"
        owner=postgres
        regexp='^listen_addresses ='
        state=present
        insertafter=EOF
        create=True

    - name: (Config) Enable pg_stat_statements
      lineinfile:
        path=/etc/postgresql/15/main/postgresql.conf
        line="shared_preload_libraries = 'pg_stat_statements'"
        owner=postgres
        regexp='^shared_preload_libraries ='
        state=present
        insertafter=EOF
        create=True

    - name: (Config) Enable track_io_timing
      lineinfile:
        path=/etc/postgresql/15/main/postgresql.conf
        line="track_io_timing = on"
        owner=postgres
        regexp='^track_io_timing  ='
        state=present
        insertafter=EOF
        create=True

    - name: (Config) Enable archive mode
      lineinfile:
        path=/etc/postgresql/15/main/postgresql.conf
        line="archive_mode = on"
        owner=postgres
        regexp='^archive_mode ='
        state=present
        insertafter=EOF
        create=True

    - name: Ensure service is restarted
      ansible.builtin.service:
        name: postgresql
        state: restarted
        enabled: yes

    - name: Copy pgbackrest configuration
      ansible.builtin.copy:
        src: pgbackrest.conf
        dest: /etc/pgbackrest.conf
        owner: postgres
        group: postgres
        mode: '0640'

    - name: Change /usr/bin/pgbackrest file permission
      file:
        path: /usr/bin/pgbackrest
        owner: postgres
        group: postgres

    - name: Change /tmp/pgbackrest/ file permission
      file:
        path: /tmp/pgbackrest/
        owner: postgres
        group: postgres
        recurse: yes

    - name: Create stanza local-prod
      command: su postgres sh -c "pgbackrest --stanza=local-prod stanza-create"

    - name: (Config) Set archive_command
      lineinfile:
        path=/etc/postgresql/15/main/postgresql.conf
        line="archive_command = 'pgbackrest --stanza=local-prod archive-push %p'"
        owner=postgres
        regexp='^archive_command ='
        state=present
        insertafter=EOF
        create=True

    - name: Ensure service is restarted
      ansible.builtin.service:
        name: postgresql
        state: restarted
        enabled: yes

    - name: Setup CRON backup (full)
      ansible.builtin.cron:
        name: "Run full postgres backup"
        minute: "0"
        hour: "5"
        user: "postgres"
        job: "pgbackrest --stanza=local-prod --type=full backup"

    - name: Setup CRON backup (diff)
      ansible.builtin.cron:
        name: "Run diff postgres backup"
        minute: "30"
        user: "postgres"
        job: "pgbackrest --stanza=local-prod --type=diff backup"