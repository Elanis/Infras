- name: Setup firewall rules
  hosts: private_ip
  become: true
  become_user: root
  tasks:
    - name: Iptables flush filter (ipv4)
      iptables:
        chain: "{{ item }}"
        flush: yes
        ip_version: ipv4
      with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]

    - name: Iptables flush nat (ipv4)
      iptables:
        table: nat
        chain: '{{ item }}'
        flush: yes
        ip_version: ipv4
      with_items: [ 'INPUT', 'OUTPUT', 'PREROUTING', 'POSTROUTING' ]
      
    - name: Iptables flush filter (ipv6)
      iptables:
        chain: "{{ item }}"
        flush: yes
        ip_version: ipv6
      with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]

    - name: Iptables flush nat (ipv6)
      iptables:
        table: nat
        chain: '{{ item }}'
        flush: yes
        ip_version: ipv6
      with_items: [ 'INPUT', 'OUTPUT', 'PREROUTING', 'POSTROUTING' ]

    - name: Allow all loopback traffic (INPUT)
      iptables:
        action: append
        chain: INPUT
        in_interface: lo
        jump: ACCEPT
        ip_version: ipv4

    - name: Allow all loopback traffic (FORWARD)
      iptables:
        action: append
        chain: FORWARD
        in_interface: lo
        jump: ACCEPT
        ip_version: ipv4

    - name: Allow all loopback traffic (INPUT)
      iptables:
        action: append
        chain: INPUT
        in_interface: lo
        jump: ACCEPT
        ip_version: ipv4

    - name: Allow all loopback traffic (FORWARD)
      iptables:
        action: append
        chain: FORWARD
        in_interface: lo
        jump: ACCEPT
        ip_version: ipv4

    - name: Allow all wireguard mesh network traffic (INPUT)
      iptables:
        action: append
        chain: INPUT
        in_interface: wg0
        jump: ACCEPT

    - name: Allow all wireguard mesh network traffic (FORWARD)
      iptables:
        action: append
        chain: FORWARD
        in_interface: wg0
        jump: ACCEPT

    - name: Allow related and established connections (INPUT) - ipv4
      ansible.builtin.iptables:
        chain: INPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT
        ip_version: ipv4

    - name: Allow related and established connections (OUTPUT) - ipv4
      ansible.builtin.iptables:
        chain: OUTPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT
        ip_version: ipv4

    - name: Allow related and established connections (INPUT) - ipv6
      ansible.builtin.iptables:
        chain: INPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT
        ip_version: ipv6

    - name: Allow related and established connections (OUTPUT) - ipv6
      ansible.builtin.iptables:
        chain: OUTPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT
        ip_version: ipv6

    # Ping - ipv4
    - name: Allow ping traffic (INPUT) - ipv4
      iptables:
        chain: INPUT
        jump: ACCEPT
        protocol: icmp
        ip_version: ipv4

    - name: Allow ping traffic (OUTPUT) - ipv4
      iptables:
        chain: OUTPUT
        jump: ACCEPT
        protocol: icmp
        ip_version: ipv4

    # Ping - ipv6
    - name: Allow ping traffic (INPUT) - ipv6
      iptables:
        chain: INPUT
        jump: ACCEPT
        protocol: ipv6-icmp
        ip_version: ipv6

    - name: Allow ping traffic (OUTPUT) - ipv6
      iptables:
        chain: OUTPUT
        jump: ACCEPT
        protocol: ipv6-icmp
        ip_version: ipv6        

    # SSH
    - name: Allow port 22/SSH traffic (INPUT)
      iptables:
        chain: INPUT
        destination_port: '22'
        jump: ACCEPT
        protocol: tcp
        ip_version: ipv4

    - name: Allow port 22/SSH traffic (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '22'
        jump: ACCEPT
        protocol: tcp
        ip_version: ipv4     

    - name: Allow port 22/SSH traffic (INPUT)
      iptables:
        chain: INPUT
        destination_port: '22'
        jump: ACCEPT
        protocol: tcp
        ip_version: ipv6

    - name: Allow port 22/SSH traffic (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '22'
        jump: ACCEPT
        protocol: tcp 
        ip_version: ipv6  

    # FTP (to access to SoYouStart backup servers)
    - name: Allow port 21/FTP traffic (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '21'
        jump: ACCEPT
        protocol: tcp

    - name: Allow port 20/FTP traffic (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '20'
        jump: ACCEPT
        protocol: tcp

    # DNS
    - name: Allow port 53/DNS traffic (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '53'
        jump: ACCEPT
        protocol: udp

    # Web - ipv4
    - name: Allow port 80/HTTP traffic (INPUT - ipv4 - tcp)
      iptables:
        chain: INPUT
        destination_port: '80'
        jump: ACCEPT
        protocol: tcp
        ip_version: ipv4

    - name: Allow port 80/HTTP traffic (OUTPUT - ipv4 - tcp)
      iptables:
        chain: OUTPUT
        destination_port: '80'
        jump: ACCEPT
        protocol: tcp
        ip_version: ipv4

    - name: Allow port 80/HTTP traffic (INPUT - ipv4 - udp)
      iptables:
        chain: INPUT
        destination_port: '80'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv4

    - name: Allow port 80/HTTP traffic (OUTPUT - ipv4 - udp)
      iptables:
        chain: OUTPUT
        destination_port: '80'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv4

    - name: Allow port 443/HTTPS traffic (INPUT - ipv4 - tcp)
      iptables:
        chain: INPUT
        destination_port: '443'
        jump: ACCEPT
        protocol: tcp
        ip_version: ipv4

    - name: Allow port 443/HTTPS traffic (OUTPUT - ipv4 - tcp)
      iptables:
        chain: OUTPUT
        destination_port: '443'
        jump: ACCEPT
        protocol: tcp
        ip_version: ipv4

    - name: Allow port 443/HTTPS traffic (INPUT - ipv4 - udp)
      iptables:
        chain: INPUT
        destination_port: '443'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv4

    - name: Allow port 443/HTTPS traffic (OUTPUT - ipv4 - udp)
      iptables:
        chain: OUTPUT
        destination_port: '443'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv4

    # Web - ipv6
    - name: Allow port 80/HTTP traffic (INPUT - ipv6 - tcp)
      iptables:
        chain: INPUT
        destination_port: '80'
        jump: ACCEPT
        protocol: tcp
        ip_version: ipv6

    - name: Allow port 80/HTTP traffic (OUTPUT - ipv6 - tcp)
      iptables:
        chain: OUTPUT
        destination_port: '80'
        jump: ACCEPT
        protocol: tcp
        ip_version: ipv6

    - name: Allow port 80/HTTP traffic (INPUT - ipv6 - udp)
      iptables:
        chain: INPUT
        destination_port: '80'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv6

    - name: Allow port 80/HTTP traffic (OUTPUT - ipv6 - udp)
      iptables:
        chain: OUTPUT
        destination_port: '80'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv6

    - name: Allow port 443/HTTPS traffic (INPUT - ipv6 - tcp)
      iptables:
        chain: INPUT
        destination_port: '443'
        jump: ACCEPT
        protocol: tcp
        ip_version: ipv6

    - name: Allow port 443/HTTPS traffic (OUTPUT - ipv6 - tcp)
      iptables:
        chain: OUTPUT
        destination_port: '443'
        jump: ACCEPT
        protocol: tcp
        ip_version: ipv6

    - name: Allow port 443/HTTPS traffic (INPUT - ipv6 - udp)
      iptables:
        chain: INPUT
        destination_port: '443'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv6

    - name: Allow port 443/HTTPS traffic (OUTPUT - ipv6 - udp)
      iptables:
        chain: OUTPUT
        destination_port: '443'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv6


    # Mail Server
    # Not opening 110 (POP3) / 995 (POP3S) as we don't use them
    - name: Allow port 25/SMTP traffic (INPUT)
      iptables:
        chain: INPUT
        destination_port: '25'
        jump: ACCEPT
        protocol: tcp

    - name: Allow port 25/SMTP traffic (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '25'
        jump: ACCEPT
        protocol: tcp

    - name: Allow port 465/SMTPS traffic (INPUT)
      iptables:
        chain: INPUT
        destination_port: '465'
        jump: ACCEPT
        protocol: tcp

    - name: Allow port 465/SMTPS traffic (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '465'
        jump: ACCEPT
        protocol: tcp

    - name: Allow port 587/SMTP traffic (INPUT)
      iptables:
        chain: INPUT
        destination_port: '587'
        jump: ACCEPT
        protocol: tcp

    - name: Allow port 587/SMTP traffic (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '587'
        jump: ACCEPT
        protocol: tcp

    - name: Allow port 143/IMAP traffic (INPUT)
      iptables:
        chain: INPUT
        destination_port: '143'
        jump: ACCEPT
        protocol: tcp

    - name: Allow port 143/IMAP traffic (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '143'
        jump: ACCEPT
        protocol: tcp

    - name: Allow port 993/IMAPS traffic (INPUT)
      iptables:
        chain: INPUT
        destination_port: '993'
        jump: ACCEPT
        protocol: tcp

    - name: Allow port 993/IMAPS traffic (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '993'
        jump: ACCEPT
        protocol: tcp

    # NTP
    - name: Allow port 123/NTP traffic (OUTPUT) - ipv4
      iptables:
        chain: OUTPUT
        destination_port: '123'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv4

    - name: Allow port 123/NTP traffic (OUTPUT) - ipv6
      iptables:
        chain: OUTPUT
        destination_port: '123'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv6

    # Wireguard
    - name: Allow wireguard listener port (51820) (INPUT)
      iptables:
        chain: INPUT
        destination_port: '51820'
        jump: ACCEPT
        protocol: udp 
        ip_version: ipv4

    - name: Allow wireguard listener port (51820) (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '51820'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv4

    - name: Allow wireguard listener port (51820) (INPUT)
      iptables:
        chain: INPUT
        destination_port: '51820'
        jump: ACCEPT
        protocol: udp 
        ip_version: ipv6

    - name: Allow wireguard listener port (51820) (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '51820'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv6

    - name: Allow wireguard listener port (51830) (INPUT)
      iptables:
        chain: INPUT
        destination_port: '51830'
        jump: ACCEPT
        protocol: udp 
        ip_version: ipv4

    - name: Allow wireguard listener port (51830) (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '51830'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv4

    - name: Allow wireguard listener port (51830) (INPUT)
      iptables:
        chain: INPUT
        destination_port: '51830'
        jump: ACCEPT
        protocol: udp 
        ip_version: ipv6

    - name: Allow wireguard listener port (51830) (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '51830'
        jump: ACCEPT
        protocol: udp
        ip_version: ipv6

    # K3S
    - name: Allow all traffic on 127.0.0.0/24
      iptables:
        chain: OUTPUT
        destination: 127.0.0.0/24
        jump: ACCEPT

    - name: Allow all traffic on 192.168.1.0/24
      iptables:
        chain: OUTPUT
        destination: 192.168.1.0/24
        jump: ACCEPT

    - name: Allow all traffic on 192.168.50.0/24
      iptables:
        chain: OUTPUT
        destination: 192.168.50.0/24
        jump: ACCEPT

    - name: Allow all traffic on 10.0.0.0/8 (OUTPUT)
      iptables:
        chain: OUTPUT
        destination: 10.0.0.0/8
        jump: ACCEPT

    - name: Allow all traffic to 10.0.0.0/8 (INPUT) from 192.168.1.0/24
      iptables:
        chain: INPUT
        destination: 10.0.0.0/8
        source: 192.168.1.0/24
        jump: ACCEPT

    # Flannel
    - name: Allow flannel listener port (8472) (OUTPUT)
      iptables:
        chain: OUTPUT
        destination_port: '8472'
        jump: ACCEPT
        protocol: udp

    # Drop other traffic
    - name: Drop any traffic without rule (INPUT) - ipv4
      iptables:
        chain: INPUT
        jump: DROP
        ip_version: ipv4

    - name: Drop any traffic without rule (OUTPUT) - ipv4
      iptables:
        chain: OUTPUT
        jump: DROP
        ip_version: ipv4

    - name: Drop any traffic without rule (INPUT) - ipv6
      iptables:
        chain: INPUT
        jump: DROP
        ip_version: ipv6

    - name: Drop any traffic without rule (OUTPUT) - ipv6
      iptables:
        chain: OUTPUT
        jump: DROP
        ip_version: ipv6

    - name: Restart wireguard service
      ansible.builtin.service:
        name: wg-quick@wg0
        state: restarted
        enabled: yes

    - name: Restart k3s service
      ansible.builtin.service:
        name: k3s
        state: restarted
        enabled: yes
