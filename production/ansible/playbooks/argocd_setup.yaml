---
- name: Install argocd
  hosts: 192.168.1.3
  become: true
  become_user: root
  tasks:
    - name: Create argocd namespace if not existing
      command: kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -

    - name: Create argocd pods
      command: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

    - name: Install argocd CLI
      shell: |
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
        rm argocd-linux-amd64

    - name: Wait for pods to start (Running state)
      shell: kubectl get pods -n argocd | grep -v "Running"
      register: list_running_pods
      retries: 10
      until: list_running_pods.stdout_lines | list | count == 1

    - name: Wait for pods to start (Replicas)
      shell: kubectl get pods -n argocd | grep "0/1"
      register: list_running_replicas
      retries: 10
      until: list_running_replicas.stdout_lines | list | count == 1

    - name: Temporary enable port-forwarding
      command: kubectl port-forward svc/argocd-server -n argocd 8080:443
      async: 120 # Maximum allowed time in Seconds
      poll: 0 # Polling Interval in Seconds

    - name: Get initial admin password
      shell: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
      register: initial_password

    - name: Login and set admin password
      shell: |
        sleep 1
        argocd login localhost:8080 --insecure --username admin --password {{ initial_password.stdout }} 
        argocd account update-password --current-password {{ initial_password.stdout }} --new-password {{ argocd_admin_password }}

    - name: Delete secret
      command: kubectl -n argocd delete secret argocd-initial-admin-secret

    - name: Create namespace if needed
      shell: kubectl create namespace dysnomia-apps --dry-run=client -o yaml | kubectl apply -f -

    - name: Grant access to Github Packages
      shell: |
        kubectl delete secret github || true
        kubectl create secret docker-registry -n dysnomia-apps github --docker-server=ghcr.io --docker-username={{ argocd_github_username }} --docker-password={{ argocd_github_token }} --docker-email={{ argocd_github_mail }}

    - name: Create apps
      shell: |
        kubectl config set-context --current --namespace=argocd
        argocd repo add https://github.com/Dysnomia-Studio/argocd-infra.git --username {{ argocd_github_username }} --password {{ argocd_github_token }}
        argocd app create dysnomia-apps --repo https://github.com/Dysnomia-Studio/argocd-infra.git --path "." --dest-server https://kubernetes.default.svc --dest-namespace dysnomia-apps
        argocd app sync dysnomia-apps
        argocd app set dysnomia-apps --sync-policy automated
